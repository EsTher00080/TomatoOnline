<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pomodorostudy.mapper.UserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.pomodorostudy.entity.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="email" property="email" />
        <result column="avatar" property="avatar" />
        <result column="signature" property="signature" />
        <result column="consecutive_days" property="consecutiveDays" />
        <result column="total_study_time" property="totalStudyTime" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, username, password, email, avatar, signature, consecutive_days, total_study_time, status, create_time, update_time
    </sql>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE username = #{username}
        AND status = 1
    </select>

    <!-- 根据邮箱查询用户 -->
    <select id="selectByEmail" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE email = #{email}
        AND status = 1
    </select>

    <!-- 查询活跃用户列表 -->
    <select id="selectActiveUsers" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE status = 1
        ORDER BY total_study_time DESC, create_time DESC
        LIMIT #{limit}
    </select>

    <!-- 更新用户学习时长 -->
    <update id="updateStudyTime">
        UPDATE user
        SET total_study_time = total_study_time + #{studyTime},
            update_time = NOW()
        WHERE id = #{userId}
    </update>

    <!-- 更新连续打卡天数 -->
    <update id="updateConsecutiveDays">
        UPDATE user
        SET consecutive_days = #{consecutiveDays},
            update_time = NOW()
        WHERE id = #{userId}
    </update>

    <!-- 重置连续打卡天数 -->
    <update id="resetConsecutiveDays">
        UPDATE user
        SET consecutive_days = 0,
            update_time = NOW()
        WHERE id = #{userId}
    </update>

    <!-- 根据学习时长范围查询用户 -->
    <select id="selectByStudyTimeRange" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM user
        WHERE status = 1
        AND total_study_time BETWEEN #{minTime} AND #{maxTime}
        ORDER BY total_study_time DESC
    </select>

    <!-- 统计用户总数 -->
    <select id="countUsers" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM user
        WHERE status = 1
    </select>

    <!-- 统计活跃用户数（有学习记录的用户） -->
    <select id="countActiveUsers" resultType="java.lang.Long">
        SELECT COUNT(DISTINCT u.id)
        FROM user u
        INNER JOIN study_log sl ON u.id = sl.user_id
        WHERE u.status = 1
    </select>

</mapper>
