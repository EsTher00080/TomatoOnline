<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pomodorostudy.mapper.RankRecordMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.pomodorostudy.entity.RankRecord">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="study_duration" property="studyDuration" />
        <result column="rank_type" property="rankType" />
        <result column="rank_position" property="rankPosition" />
        <result column="rank_date" property="rankDate" />
        <result column="focus_sessions" property="focusSessions" />
        <result column="completed_tasks" property="completedTasks" />
        <result column="efficiency_avg" property="efficiencyAvg" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, study_duration, rank_type, rank_position, rank_date, focus_sessions, completed_tasks, efficiency_avg, create_time, update_time
    </sql>

    <!-- 根据排行类型和日期查询排行榜 -->
    <select id="selectByRankTypeAndDate" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE rank_type = #{rankType}
        AND rank_date = #{rankDate}
        ORDER BY rank_position ASC
    </select>

    <!-- 查询用户排行榜记录 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE user_id = #{userId}
        ORDER BY rank_date DESC, rank_type ASC
    </select>

    <!-- 查询用户指定类型的排行榜记录 -->
    <select id="selectByUserIdAndRankType" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE user_id = #{userId}
        AND rank_type = #{rankType}
        ORDER BY rank_date DESC
    </select>

    <!-- 查询今日排行榜 -->
    <select id="selectTodayRanking" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE rank_type = 1
        AND rank_date = CURDATE()
        ORDER BY rank_position ASC
        LIMIT #{limit}
    </select>

    <!-- 查询本周排行榜 -->
    <select id="selectWeekRanking" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE rank_type = 2
        AND rank_date = #{weekDate}
        ORDER BY rank_position ASC
        LIMIT #{limit}
    </select>

    <!-- 查询本月排行榜 -->
    <select id="selectMonthRanking" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE rank_type = 3
        AND rank_date = #{monthDate}
        ORDER BY rank_position ASC
        LIMIT #{limit}
    </select>

    <!-- 查询总榜 -->
    <select id="selectTotalRanking" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE rank_type = 4
        ORDER BY rank_position ASC
        LIMIT #{limit}
    </select>

    <!-- 查询用户排名 -->
    <select id="selectUserRank" resultType="java.lang.Integer">
        SELECT rank_position
        FROM rank_record
        WHERE user_id = #{userId}
        AND rank_type = #{rankType}
        AND rank_date = #{rankDate}
    </select>

    <!-- 查询排行榜前N名 -->
    <select id="selectTopRanking" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE rank_type = #{rankType}
        AND rank_date = #{rankDate}
        AND rank_position &lt;= #{topN}
        ORDER BY rank_position ASC
    </select>

    <!-- 查询用户历史最佳排名 -->
    <select id="selectUserBestRank" resultType="java.lang.Integer">
        SELECT MIN(rank_position)
        FROM rank_record
        WHERE user_id = #{userId}
        AND rank_type = #{rankType}
    </select>

    <!-- 统计排行榜记录数 -->
    <select id="countRankRecords" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM rank_record
        WHERE rank_type = #{rankType}
        AND rank_date = #{rankDate}
    </select>

    <!-- 查询排行榜统计信息 -->
    <select id="selectRankingStatistics" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_records,
            AVG(study_duration) as avg_study_duration,
            MAX(study_duration) as max_study_duration,
            MIN(study_duration) as min_study_duration
        FROM rank_record
        WHERE rank_type = #{rankType}
        AND rank_date = #{rankDate}
    </select>

    <!-- 查询用户排行榜历史 -->
    <select id="selectUserRankingHistory" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM rank_record
        WHERE user_id = #{userId}
        AND rank_type = #{rankType}
        AND rank_date >= DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
        ORDER BY rank_date DESC
    </select>

    <!-- 查询排行榜变化趋势 -->
    <select id="selectRankingTrend" resultType="java.util.Map">
        SELECT 
            rank_date,
            rank_position,
            study_duration
        FROM rank_record
        WHERE user_id = #{userId}
        AND rank_type = #{rankType}
        AND rank_date >= DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
        ORDER BY rank_date ASC
    </select>

    <!-- 查询排行榜分布统计 -->
    <select id="selectRankingDistribution" resultType="java.util.Map">
        SELECT 
            CASE 
                WHEN rank_position &lt;= 10 THEN 'top10'
                WHEN rank_position &lt;= 50 THEN 'top50'
                WHEN rank_position &lt;= 100 THEN 'top100'
                ELSE 'other'
            END as rank_range,
            COUNT(*) as count
        FROM rank_record
        WHERE rank_type = #{rankType}
        AND rank_date = #{rankDate}
        GROUP BY rank_range
    </select>

    <!-- 查询用户排行榜成就 -->
    <select id="selectUserRankingAchievements" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_appearances,
            MIN(rank_position) as best_rank,
            AVG(rank_position) as avg_rank,
            COUNT(CASE WHEN rank_position = 1 THEN 1 END) as first_place_count
        FROM rank_record
        WHERE user_id = #{userId}
        AND rank_type = #{rankType}
    </select>

    <!-- 查询排行榜活跃用户 -->
    <select id="selectActiveRankingUsers" resultType="java.util.Map">
        SELECT 
            user_id,
            COUNT(*) as appearance_count,
            AVG(rank_position) as avg_rank
        FROM rank_record
        WHERE rank_type = #{rankType}
        AND rank_date >= DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
        GROUP BY user_id
        HAVING appearance_count >= #{minAppearances}
        ORDER BY avg_rank ASC
        LIMIT #{limit}
    </select>

    <!-- 清理过期排行榜记录 -->
    <delete id="cleanExpiredRankRecords">
        DELETE FROM rank_record
        WHERE rank_date &lt; DATE_SUB(CURDATE(), INTERVAL #{days} DAY)
    </delete>

</mapper>
